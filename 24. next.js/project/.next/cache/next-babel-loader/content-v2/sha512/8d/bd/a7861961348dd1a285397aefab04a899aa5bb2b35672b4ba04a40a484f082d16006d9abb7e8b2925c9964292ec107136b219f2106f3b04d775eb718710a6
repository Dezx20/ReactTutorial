{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\2009a\\\\Documents\\\\web_development\\\\ReactTutorial\\\\24. next.js\\\\project\\\\pages\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nconst HomePage = props => {\n  //   const [loadedMeetups, setLoadedMeetups] = useState([]);\n  //   useEffect(() => {\n  //     // send a http request & fetch data\n  //     setLoadedMeetups(DUMMY_MEETUPS);\n  //   }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(MeetupList, {\n        meetups: props.meetups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}; // export const getServerSideProps = async (context) => {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// };\n\n\nexport const getStaticProps = async () => {\n  // fetch data from an API\n  const client = await MongoClient.connect(\"mongodb+srv://miniDezx:reactNextJS@cluster0.9z91v.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    //@ always returns a object\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.data.title,\n        address: meetup.data.address,\n        image: meetup.data.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1000\n  };\n};\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/2009a/Documents/web_development/ReactTutorial/24. next.js/project/pages/index.js"],"names":["MongoClient","Head","Fragment","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","data","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B;AAEA;AACA;AACA;AACA;AAEA,sBACE,QAAC,QAAD;AAAA,2BAEE,QAAC,IAAD;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAhBD,C,CAkBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC;AACA,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACL;AACAV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAChCC,QAAAA,KAAK,EAAED,MAAM,CAACE,IAAP,CAAYD,KADa;AAEhCE,QAAAA,OAAO,EAAEH,MAAM,CAACE,IAAP,CAAYC,OAFW;AAGhCC,QAAAA,KAAK,EAAEJ,MAAM,CAACE,IAAP,CAAYE,KAHa;AAIhCC,QAAAA,EAAE,EAAEL,MAAM,CAACM,GAAP,CAAWC,QAAX;AAJ4B,OAAb,CAAZ;AADJ,KAFF;AAULC,IAAAA,UAAU,EAAE;AAVP,GAAP;AAYD,CAzBM;AA2BP,eAAerB,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport Head from \"next/head\";\r\nimport { Fragment } from \"react\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst HomePage = (props) => {\r\n  //   const [loadedMeetups, setLoadedMeetups] = useState([]);\r\n\r\n  //   useEffect(() => {\r\n  //     // send a http request & fetch data\r\n  //     setLoadedMeetups(DUMMY_MEETUPS);\r\n  //   }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <MeetupList meetups={loadedMeetups} /> */}\r\n      <Head>\r\n        <MeetupList meetups={props.meetups} />\r\n      </Head>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n// export const getServerSideProps = async (context) => {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n\r\n//   // fetch data from an API\r\n\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS,\r\n//     },\r\n//   };\r\n// };\r\n\r\nexport const getStaticProps = async () => {\r\n  // fetch data from an API\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://miniDezx:reactNextJS@cluster0.9z91v.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    //@ always returns a object\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.data.title,\r\n        address: meetup.data.address,\r\n        image: meetup.data.image,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 1000,\r\n  };\r\n};\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}